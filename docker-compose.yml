version: '3.9'
services:
  traefik:
    image: traefik:2.10
    command: --providers.docker=true --providers.docker.exposedByDefault=false --entryPoints.http.address=:80
    ports:
      - 80:80
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public

  client:
    build:
      context: client/docker/dev/nginx
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.site.rule=Host(`pharm.test`) || Host(`www.pharm.test`)
      - traefik.http.routers.site.entryPoints=http
      - traefik.http.routers.site.service=site_main
      - traefik.http.services.site_main.loadBalancer.server.port=80
      - traefik.http.middlewares.site-redirect.redirectRegex.regex=^(https?://)www.pharm.test/(.*)$$
      - traefik.http.middlewares.site-redirect.redirectRegex.replacement=$${1}pharm.test/$${2}
      - traefik.http.middlewares.site-redirect.redirectRegex.permanent=true
      - traefik.http.routers.site.middlewares=site-redirect

  client-node:
    build:
      context: client/docker/dev/node
    environment:
      NEXT_PUBLIC_API_URL: http://api.pharm.test
      NEXT_PUBLIC_COOKIE_DOMAIN: .pharm.test
    volumes:
      - ./client:/app
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn dev"
    links:
      - api:api.pharm.test

  client-node-cli:
    build:
      context: client/docker/dev/node
    volumes:
      - ./client:/app

  panel:
    build:
      context: panel/docker/dev/nginx
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.panel.rule=Host(`panel.pharm.test`)
      - traefik.http.routers.panel.entryPoints=http
      - traefik.http.services.panel.loadBalancer.server.port=80

  panel-node:
    build:
      context: panel/docker/dev/node
    environment:
      REACT_APP_API_URL: http://api.pharm.test
      REACT_APP_COOKIE_DOMAIN: .pharm.test
    volumes:
      - ./panel:/app
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn start"

  panel-node-cli:
    build:
      context: panel/docker/dev/node
    volumes:
      - ./panel:/app

  api:
    build:
      context: api/docker
      dockerfile: dev/nginx/Dockerfile
    volumes:
      - ./api:/app
      - uploads:/app/storage/app/public
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.api.rule=Host(`api.pharm.test`)
      - traefik.http.routers.api.entryPoints=http,http_other
      - traefik.http.services.api.loadBalancer.server.port=80

  api-php-fpm:
    build:
      context: api/docker
      dockerfile: dev/php-fpm/Dockerfile
    environment:
      APP_NAME: Сеть аптек 120/80
      APP_URL: http://api.pharm.test
      APP_ENV: local
      APP_DEBUG: true
      DB_CONNECTION: pgsql
      DB_HOST: api-db
      DB_DATABASE: app
      DB_USERNAME: app
      DB_PASSWORD: secret
      QUEUE_CONNECTION: redis
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      SESSION_DOMAIN: .pharm.test
      REDIS_HOST: redis
      MAIL_HOST: mailer
      MAIL_FROM_ADDRESS: info@localhost
      MAIL_FROM_NAME: Сеть аптек 120/80
      FILESYSTEM_DISK: public
      ELASTICSEARCH_HOST: elastic

      AWS_ACCESS_KEY_ID: 49TVWG22M33V020AQGPL
      AWS_SECRET_ACCESS_KEY: xRG2ZlM0fYNITpEjv0DqNiw1g8VpYPoFDLa1gJl2
      AWS_DEFAULT_REGION: ru-1
      AWS_BUCKET: b54c6f4d-e3a6020f-0124-4c05-9376-48c13c25210f
      AWS_URL: AWS_URL=https://s3.timeweb.cloud/b54c6f4d-e3a6020f-0124-4c05-9376-48c13c25210f
      AWS_ENDPOINT: https://s3.timeweb.cloud

    volumes:
      - ./api:/app
      - uploads:/app/storage/app/public

  api-php-cli:
    build:
      context: api/docker
      dockerfile: dev/php-cli/Dockerfile
    environment:
      APP_NAME: Сеть аптек 120/80
      APP_URL: http://api.pharm.test
      APP_ENV: local
      APP_DEBUG: true
      DB_CONNECTION: pgsql
      DB_HOST: api-db
      DB_DATABASE: app
      DB_USERNAME: app
      DB_PASSWORD: secret
      QUEUE_CONNECTION: redis
      REDIS_HOST: redis
      MAIL_HOST: mailer
      MAIL_FROM_ADDRESS: info@localhost
      MAIL_FROM_NAME: Сеть аптек 120/80
      FILESYSTEM_DISK: public
      ELASTICSEARCH_HOST: elastic
    volumes:
      - ./api:/app
      - uploads:/app/storage/app/public

  api-db:
    image: postgres:14.1-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: app
    volumes:
      - api-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  mailer:
    image: mailhog/mailhog
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.mailer.rule=Host(`mailer.pharm.test`)
      - traefik.http.routers.mailer.entryPoints=http
      - traefik.http.services.mailer.loadBalancer.server.port=8025

  # parser:
  #   build:
  #     context: parser
  #     dockerfile: docker/Dockerfile
  #   environment:
  #     APP_NAME: Сеть аптек 120/80
  #   volumes:
  #     - ./parser:/app
  #     - uploads:/app/data

  bot:
    build:
      context: bot
      dockerfile: docker/Dockerfile
    environment:
      APP_NAME: Сеть аптек 120/80
      APP_ENV: local
      REDIS_HOST: redis
      BOT_TOKEN: ${BOT_TOKEN}
    volumes:
      - ./bot:/app

  elastic:
    image: elasticsearch:8.7.1
    environment:
      node.name: elasticsearch
      discovery.type: single-node
      xpack.ml.enabled: false
      xpack.security.enabled: false
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

  redis:
    image: redis:7.0-alpine
    networks:
      - traefik-public
      - default

volumes:
  api-db:
  uploads:
  es-data:


networks:
  traefik-public:
    name: traefik-public
