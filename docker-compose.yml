version: '3.9'
services:
  gateway:
    build:
      context: gateway/docker
      dockerfile: dev/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
  
  api:
    build:
      context: api/docker
      dockerfile: dev/nginx/Dockerfile
    volumes:
      - ./api:/app
  
  api-php-fpm:
    build:
      context: api/docker
      dockerfile: dev/php-fpm/Dockerfile
    volumes:
      - ./api:/app

  api-php-cli:
    build:
      context: api/docker
      dockerfile: dev/php-cli/Dockerfile
    volumes:
      - ./api:/app

  panel:
    build:
      context: panel/docker/dev/nginx

  panel-node:
    build:
      context: panel/docker/dev/node
    volumes:
      - ./panel:/app
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn start"

  panel-node-cli:
    build:
      context: panel/docker/dev/node
    volumes:
      - ./panel:/app

  site:
    build:
      context: site/docker
      dockerfile: dev/nginx/Dockerfile
    volumes:
      - ./site:/app
      - uploads:/app/storage/app/public

  site-php-fpm:
    build:
      context: site/docker
      dockerfile: dev/php-fpm/Dockerfile
    volumes:
      - ./site:/app
      - uploads:/app/storage/app/public

  site-php-cli:
    build:
      context: site/docker
      dockerfile: dev/php-cli/Dockerfile
    volumes:
      - ./site:/app

  site-node:
    build:
      context: site/docker/dev/node
    volumes:
      - ./site:/app
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn watch"

  site-node-cli:
    build:
      context: site/docker/dev/node
    volumes:
      - ./site:/app

  db-postgres:
    image: postgres:14.1-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: app
    volumes:
      - db-postgres:/var/lib/postgresql/data
    ports:
      - "54321:5432"

  mailer:
    image: mailhog/mailhog

  redis:
    image: redis:6.2-alpine

volumes:
  db-postgres:
  uploads:
