version: '3.9'
services:
  traefik:
    image: traefik:2.7
    command: --providers.docker=true --providers.docker.exposedByDefault=false --entryPoints.http.address=:80 --entryPoints.http_other.address=:8888
    ports:
      - "80:80"
      - "8888:8888"
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public

  client:
    build:
      context: client/docker/dev/nginx
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.client.rule=Host(`client.pharm.test`)
      - traefik.http.routers.client.entryPoints=http
      - traefik.http.services.client.loadBalancer.server.port=80
    healthcheck:
      test: [ "curl", "--fail http://127.0.0.1/health || exit 1" ]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 10s

  client-node:
    build:
      context: client/docker/dev/node
    volumes:
      - ./client:/app
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn dev"
    links:
      - "api:api.pharm.test"
    healthcheck:
      test: [ "curl", "--fail http://127.0.0.1:3000/health || exit 1" ]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 10s

  client-node-cli:
    build:
      context: client/docker/dev/node
    volumes:
      - ./client:/app

  panel:
    build:
      context: panel/docker/dev/nginx
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.panel.rule=Host(`panel.pharm.test`)
      - traefik.http.routers.panel.entryPoints=http
      - traefik.http.services.panel.loadBalancer.server.port=80

  panel-node:
    build:
      context: panel/docker/dev/node
    environment:
      REACT_APP_API_URL: http://pharm.test
    volumes:
      - ./panel:/app
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn start"

  panel-node-cli:
    build:
      context: panel/docker/dev/node
    volumes:
      - ./panel:/app

  site:
    build:
      context: site/docker
      dockerfile: dev/nginx/Dockerfile
    volumes:
      - ./site:/app
      - uploads:/app/storage/app/public
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.site.rule=Host(`pharm.test`) || Host(`www.pharm.test`)
      - traefik.http.routers.site.entryPoints=http
      - traefik.http.routers.site.service=site_main
      - traefik.http.services.site_main.loadBalancer.server.port=80
      - traefik.http.routers.site_other.rule=Host(`pharm.test`) || Host(`www.pharm.test`)
      - traefik.http.routers.site_other.entryPoints=http_other
      - traefik.http.routers.site_other.service=site_other
      - traefik.http.services.site_other.loadBalancer.server.port=8888
      - traefik.http.middlewares.site-redirect.redirectRegex.regex=^(https?://)www.pharm.test/(.*)$$
      - traefik.http.middlewares.site-redirect.redirectRegex.replacement=$${1}pharm.test/$${2}
      - traefik.http.middlewares.site-redirect.redirectRegex.permanent=true
      - traefik.http.routers.site.middlewares=site-redirect

  site-php-fpm:
    build:
      context: site/docker
      dockerfile: dev/php-fpm/Dockerfile
    environment:
      APP_NAME: Сеть аптек 120/80
      APP_URL: http://pharm.test
      APP_ENV: local
      APP_DEBUG: true
      LOG_CHANNEL: stack
      LOG_LEVEL: debug
      DB_CONNECTION: pgsql
      DB_HOST: db-postgres
      DB_DATABASE: app
      DB_USERNAME: app
      DB_PASSWORD: secret
      BROADCAST_DRIVER: redis
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis
      SESSION_LIFETIME: 120
      SESSION_DOMAIN: '.pharm.test'
      SANCTUM_STATEFUL_DOMAINS: '*.pharm.test'
      CORS_ORIGIN: 'http://panel.pharm.test|http://client.pharm.test'
      REDIS_HOST: redis
      REDIS_CLIENT: predis
      MAIL_HOST: mailer
      MAIL_FROM_ADDRESS: info@pharm.test
      MAIL_FROM_NAME: Сеть аптек 120/80
      FILESYSTEM_DRIVER: public
    volumes:
      - ./site:/app
      - uploads:/app/storage/app/public

  site-php-cli:
    build:
      context: site/docker
      dockerfile: dev/php-cli/Dockerfile
    environment:
      APP_NAME: Сеть аптек 120/80
      APP_URL: http://pharm.test
      APP_ENV: local
      APP_DEBUG: true
      LOG_CHANNEL: stack
      LOG_LEVEL: debug
      DB_CONNECTION: pgsql
      DB_HOST: db-postgres
      DB_DATABASE: app
      DB_USERNAME: app
      DB_PASSWORD: secret
      BROADCAST_DRIVER: redis
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis
      SESSION_LIFETIME: 120
      SESSION_DOMAIN: '.pharm.test'
      SANCTUM_STATEFUL_DOMAINS: '*.pharm.test'
      REDIS_HOST: redis
      REDIS_CLIENT: predis
      MAIL_HOST: mailer
      MAIL_FROM_ADDRESS: info@pharm.test
      MAIL_FROM_NAME: Сеть аптек 120/80
      FILESYSTEM_DRIVER: public
    volumes:
      - ./site:/app
      - uploads:/app/storage/app/public

  site-node:
    build:
      context: site/docker/dev/node
    volumes:
      - ./site:/app
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn watch"

  site-node-cli:
    build:
      context: site/docker/dev/node
    volumes:
      - ./site:/app

  api:
    build:
      context: api/docker
      dockerfile: dev/nginx/Dockerfile
    volumes:
      - ./api:/app
      - uploads:/app/storage/app/public
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.api.rule=Host(`api.pharm.test`)
      - traefik.http.routers.api.entryPoints=http
      - traefik.http.services.api.loadBalancer.server.port=80
    healthcheck:
      test: [ "curl", "--fail http://127.0.0.1/health || exit 1" ]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 10s

  api-php-fpm:
    build:
      context: api/docker
      dockerfile: dev/php-fpm/Dockerfile
    environment:
      APP_NAME: Сеть аптек 120/80
      APP_URL: http://api.pharm.test
      APP_ENV: local
      APP_DEBUG: true
      LOG_CHANNEL: stack
      LOG_LEVEL: debug
      DB_CONNECTION: pgsql
      DB_HOST: db-postgres
      DB_DATABASE: app
      DB_USERNAME: app
      DB_PASSWORD: secret
      BROADCAST_DRIVER: redis
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis
      SESSION_LIFETIME: 120
      SESSION_DOMAIN: '.pharm.test'
      SANCTUM_STATEFUL_DOMAINS: '*.pharm.test'
      CORS_ORIGIN: 'http://panel.pharm.test|http://client.pharm.test'
      REDIS_HOST: redis
      REDIS_CLIENT: predis
      MAIL_HOST: mailer
      MAIL_FROM_ADDRESS: info@pharm.test
      MAIL_FROM_NAME: Сеть аптек 120/80
      FILESYSTEM_DRIVER: public
    volumes:
      - ./api:/app
      - uploads:/app/storage/app/public
    healthcheck:
      test: [ "cgi-fcgi", "-bind -connect 127.0.0.1:9000 || exit 1" ]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 10s

  api-php-cli:
    build:
      context: api/docker
      dockerfile: dev/php-cli/Dockerfile
    environment:
      APP_NAME: Сеть аптек 120/80
      APP_URL: http://api.pharm.test
      APP_ENV: local
      APP_DEBUG: true
      LOG_CHANNEL: stack
      LOG_LEVEL: debug
      DB_CONNECTION: pgsql
      DB_HOST: db-postgres
      DB_DATABASE: app
      DB_USERNAME: app
      DB_PASSWORD: secret
      BROADCAST_DRIVER: redis
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis
      SESSION_LIFETIME: 120
      SESSION_DOMAIN: '.pharm.test'
      SANCTUM_STATEFUL_DOMAINS: '*.pharm.test'
      REDIS_HOST: redis
      REDIS_CLIENT: predis
      MAIL_HOST: mailer
      MAIL_FROM_ADDRESS: info@pharm.test
      MAIL_FROM_NAME: Сеть аптек 120/80
      FILESYSTEM_DRIVER: public
    volumes:
      - ./api:/app
      - uploads:/app/storage/app/public

  db-postgres:
    image: postgres:14.1-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: app
    volumes:
      - db-postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  mailer:
    image: mailhog/mailhog
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.mailer.rule=Host(`mailer.pharm.test`)
      - traefik.http.routers.mailer.entryPoints=http
      - traefik.http.services.mailer.loadBalancer.server.port=8025

  redis:
    image: redis:6.2-alpine
    networks:
      - traefik-public
      - default
    volumes:
      - redis-data:/data
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.redis.rule=Host(`redis.pharm.test`)
      - traefik.http.routers.redis.entryPoints=http
      - traefik.http.services.redis.loadBalancer.server.port=6379

  parser:
    build:
      context: parser
      dockerfile: docker/Dockerfile
    environment:
      APP_NAME: Сеть аптек 120/80
    volumes:
      - ./parser:/app
      - uploads:/app/data

  bot:
    build:
      context: bot
      dockerfile: docker/Dockerfile
    environment:
      APP_NAME: Сеть аптек 120/80
      REDIS_HOST: redis
    volumes:
      - ./bot:/app
    depends_on:
      - redis

volumes:
  db-postgres:
  redis-data:
  uploads:


networks:
  traefik-public:
    name: traefik-public
