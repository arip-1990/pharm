version: '3.9'
services:
  traefik:
    image: traefik:2.8
    command:
      --providers.docker=true
      --providers.docker.exposedByDefault=false
      --entryPoints.http.address=:80
    ports:
      - "80:80"
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public

  client:
    build:
      context: client/docker/dev/nginx
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.site.rule=Host(`localhost`) || Host(`www.localhost`)
      - traefik.http.routers.site.entryPoints=http
      - traefik.http.routers.site.service=site_main
      - traefik.http.services.site_main.loadBalancer.server.port=80
      - traefik.http.middlewares.site-redirect.redirectRegex.regex=^(https?://)www.localhost/(.*)$$
      - traefik.http.middlewares.site-redirect.redirectRegex.replacement=$${1}localhost/$${2}
      - traefik.http.middlewares.site-redirect.redirectRegex.permanent=true
      - traefik.http.routers.site.middlewares=site-redirect

  client-node:
    build:
      context: client/docker/dev/node
    environment:
      NEXT_PUBLIC_API_URL: http://api.localhost
      NEXT_PUBLIC_COOKIE_DOMAIN: localhost
    volumes:
      - ./client:/app
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn dev"
    links:
      - "api:api.localhost"

  client-node-cli:
    build:
      context: client/docker/dev/node
    volumes:
      - ./client:/app

  panel:
    build:
      context: panel/docker/dev/nginx
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.panel.rule=Host(`panel.localhost`)
      - traefik.http.routers.panel.entryPoints=http
      - traefik.http.services.panel.loadBalancer.server.port=80

  panel-node:
    build:
      context: panel/docker/dev/node
    environment:
      REACT_APP_API_URL: http://api.localhost
    volumes:
      - ./panel:/app
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn start"

  panel-node-cli:
    build:
      context: panel/docker/dev/node
    volumes:
      - ./panel:/app

  api:
    build:
      context: api/docker
      dockerfile: dev/nginx/Dockerfile
    volumes:
      - ./api:/app
      - uploads:/app/storage/app/public
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.api.rule=Host(`api.localhost`)
      - traefik.http.routers.api.entryPoints=http,http_other
      - traefik.http.services.api.loadBalancer.server.port=80

  api-php-fpm:
    build:
      context: api/docker
      dockerfile: dev/php-fpm/Dockerfile
    environment:
      APP_NAME: Сеть аптек 120/80
      APP_URL: http://api.localhost
      APP_ENV: local
      APP_DEBUG: true
      LOG_CHANNEL: stack
      LOG_LEVEL: debug
      DB_CONNECTION: pgsql
      DB_HOST: db-postgres
      DB_DATABASE: app
      DB_USERNAME: app
      DB_PASSWORD: secret
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis
      SESSION_CONNECTION: cache
      REDIS_HOST: redis
      MAIL_HOST: mailer
      MAIL_FROM_ADDRESS: info@localhost
      MAIL_FROM_NAME: Сеть аптек 120/80
      FILESYSTEM_DISK: public
    volumes:
      - ./api:/app
      - uploads:/app/storage/app/public

  api-php-cli:
    build:
      context: api/docker
      dockerfile: dev/php-cli/Dockerfile
    environment:
      APP_NAME: Сеть аптек 120/80
      APP_URL: http://api.localhost
      APP_ENV: local
      APP_DEBUG: true
      LOG_CHANNEL: stack
      LOG_LEVEL: debug
      DB_CONNECTION: pgsql
      DB_HOST: db-postgres
      DB_DATABASE: app
      DB_USERNAME: app
      DB_PASSWORD: secret
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      REDIS_HOST: redis
      MAIL_HOST: mailer
      MAIL_FROM_ADDRESS: info@localhost
      MAIL_FROM_NAME: Сеть аптек 120/80
      FILESYSTEM_DISK: public
    volumes:
      - ./api:/app
      - uploads:/app/storage/app/public

  db-postgres:
    image: postgres:14.1-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: app
    volumes:
      - db-postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  mailer:
    image: mailhog/mailhog
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.mailer.rule=Host(`mailer.localhost`)
      - traefik.http.routers.mailer.entryPoints=http
      - traefik.http.services.mailer.loadBalancer.server.port=8025

  redis:
    image: redis:6.2-alpine
    networks:
      - traefik-public
      - default

  # parser:
  #   build:
  #     context: parser
  #     dockerfile: docker/Dockerfile
  #   environment:
  #     APP_NAME: Сеть аптек 120/80
  #   volumes:
  #     - ./parser:/app
  #     - uploads:/app/data

  bot:
    build:
      context: bot
      dockerfile: docker/Dockerfile
    environment:
      APP_NAME: Сеть аптек 120/80
      REDIS_HOST: redis
    volumes:
      - ./bot:/app
    depends_on:
      - redis

  # elasticsearch:
  #   image: elasticsearch:8.3.2
  #   environment:
  #     - node.name=elasticsearch
  #     - cluster.name=es-docker-cluster
  #     - cluster.initial_master_nodes=elasticsearch
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - xpack.security.enabled=false
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - esdata:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200

volumes:
  db-postgres:
  uploads:
  esdata:


networks:
  traefik-public:
    name: traefik-public
