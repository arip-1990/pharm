version: '3.9'
services:
  traefik:
    image: traefik:2.6
    command: --providers.docker=true --providers.docker.exposedByDefault=false --entryPoints.http.address=:80
    ports:
      - "80:80"
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public

  panel:
    build:
      context: panel/docker/dev/nginx
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.panel.rule=Host(`panel.pharm.test`)
      - traefik.http.routers.panel.entryPoints=http
      - traefik.http.services.panel.loadBalancer.server.port=80

  panel-node:
    build:
      context: panel/docker/dev/node
    volumes:
      - ./panel:/app
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn start"

  panel-node-cli:
    build:
      context: panel/docker/dev/node
    volumes:
      - ./panel:/app

  site:
    build:
      context: site/docker
      dockerfile: dev/nginx/Dockerfile
    volumes:
      - ./site:/app
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.site.rule=Host(`pharm.test`) || Host(`www.pharm.test`)
      - traefik.http.routers.site.entryPoints=http
      - traefik.http.services.site.loadBalancer.server.port=80
      - traefik.http.middlewares.site-redirect.redirectRegex.regex=^(https?://)www.pharm.test/(.*)$$
      - traefik.http.middlewares.site-redirect.redirectRegex.replacement=$${1}pharm.test/$${2}
      - traefik.http.middlewares.site-redirect.redirectRegex.permanent=true
      - traefik.http.routers.site.middlewares=site-redirect

  site-php-fpm:
    build:
      context: site/docker
      dockerfile: dev/php-fpm/Dockerfile
    volumes:
      - ./site:/app

  site-php-cli:
    build:
      context: site/docker
      dockerfile: dev/php-cli/Dockerfile
    volumes:
      - ./site:/app

  site-node:
    build:
      context: site/docker/dev/node
    volumes:
      - ./site:/app
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn watch"

  site-node-cli:
    build:
      context: site/docker/dev/node
    volumes:
      - ./site:/app

  db-postgres:
    image: postgres:14.1-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: app
    volumes:
      - db-postgres:/var/lib/postgresql/data
    ports:
      - "54321:5432"

  mailer:
    image: mailhog/mailhog
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.mailer.rule=Host(`mailer.pharm.test`)
      - traefik.http.routers.mailer.entryPoints=http
      - traefik.http.services.mailer.loadBalancer.server.port=8025

  redis:
    image: redis:6.2-alpine
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.redis.rule=Host(`redis.pharm.test`)
      - traefik.http.routers.redis.entryPoints=http
      - traefik.http.services.redis.loadBalancer.server.port=6379

volumes:
  db-postgres:

networks:
  traefik-public:
    name: traefik-public
